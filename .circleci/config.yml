# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  checkout:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/laravel
  dependencies_php:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

  dependencies_js:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules
  mockup_testing:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: composer-v1-{{ checksum "composer.lock" }}

      - run: touch database/testing.sqlite
      - run: php artisan migrate --env=testing --database=sqlite_testing --force
      - save_cache:
          key: node-v1-{{ checksum "database/testing.sqlite" }}
          paths:
            - database

  test:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - restore_cache:
          keys:
              - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
              - composer-v1-{{ checksum "composer.lock" }}
      - restore_cache:
          keys:
              - node-v1-{{ checksum "package.json" }}
      - restore_cache:
          key: node-v1-{{ checksum "database/testing.sqlite" }}
      - run:
          name: PHPUnit
          command: |
            mkdir -p ~/phpunit
            ./vendor/bin/phpunit --log-junit ~/build/phpunit/junit.xml
          when: always
      - store_test_results:
          path: ~/build/phpunit
      - store_artifacts:
          path: ~/build/phpunit
  coverage:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - restore_cache:
          keys:
              - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
              - composer-v1-{{ checksum "composer.lock" }}
      - restore_cache:
          keys:
              - node-v1-{{ checksum "package.json" }}
      - restore_cache:
          key: node-v1-{{ checksum "database/testing.sqlite" }}

      - run:
          name: Generate coverage
          command: ./vendor/bin/phpunit --coverage-clover ~/build/phpunit/coverage/xml
      - run:
          name: Upload coverage to Codacy
          command: ./vendor/bin/codacycoverage clover ~/build/phpunit/coverage/xml
      - store_test_results:
          path: ~/build/phpunit
      - store_artifacts:
          path: ~/build/phpunit
  docs:
    docker:
      - image: circleci/php:7.1-node-browsers
    working_directory: ~/laravel
    steps:
      - restore_cache:
          keys:
              - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      # - restore_cache:
          # keys:
              # - composer-v1-{{ checksum "composer.lock" }}
      # - restore_cache:
          # keys:
              # - node-v1-{{ checksum "package.json" }}
      # - restore_cache:
          # key: node-v1-{{ checksum "database/testing.sqlite" }}

      - run: curl -O http://get.sensiolabs.org/sami.phar -o ./sami.phar
      - run:
           name: Generate documentation
           command: php sami.phar update sami.php
      - store_test_results:
            path: ~/build/docs
      - store_artifacts:
            path: ~/build/docs


workflows:
  version: 2
  everything:
    jobs:
      - checkout
      - dependencies_php:
           requires:
               - checkout
      - dependencies_js:
           requires:
               - checkout

      - mockup_testing:
           requies:
               - dependencies_php
               - dependencies_js
      - test:
           requires:
               - dependencies_php
               - dependencies_js
      - coverage:
           requires:
               - dependencies_php
      - docs:
           requires:
               - checkout
